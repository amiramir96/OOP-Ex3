import time
from random import randint
from unittest import TestCase

from src.DiGraph import DiGraph
from src.GraphAlgo import GraphAlgo


class TestGraphAlgo(TestCase):
    def test_G1_json(self):
        print("test_G1_json")
        start = time.time()
        algo = GraphAlgo()
        algo.load_from_json(r'G1.json')
        end = time.time()
        print("load: ", end-start)
        start = time.time()
        algo.save_to_json(r'temp_graph')
        end = time.time()
        print("save: ", end-start)
        start = time.time()
        x = algo.is_connected_graph(0)
        end = time.time()
        print("is connected: ", x, end-start)
        start = time.time()
        x= algo.centerPoint()
        end = time.time()
        print("center: ", x, end-start)
        start = time.time()
        x = algo.shortest_path(1, 12)
        end = time.time()
        print("shortestPath: ", x, end - start)
        start = time.time()
        x = algo.TSP([0, 2, 4, 6, 8])
        end = time.time()
        print("TSP: ", x, end - start)
        print()

    def test_G2_json(self):
        print("test_G2_json")
        start = time.time()
        algo = GraphAlgo()
        algo.load_from_json(r'G2.json')
        end = time.time()
        print("load: ", end - start)
        start = time.time()
        algo.save_to_json(r'temp_graph')
        end = time.time()
        print("save: ", end - start)
        start = time.time()
        x = algo.is_connected_graph(0)
        end = time.time()
        print("is connected: ", x, end - start)
        start = time.time()
        x = algo.centerPoint()
        end = time.time()
        print("center: ", x, end - start)
        start = time.time()
        x = algo.shortest_path(1, 12)
        end = time.time()
        print("shortestPath: ", x, end - start)
        start = time.time()
        x = algo.TSP([0, 2, 4, 6, 8])
        end = time.time()
        print("TSP: ", x, end - start)
        print()

    def test_G3_json(self):
        print("test_G3_json")
        start = time.time()
        algo = GraphAlgo()
        algo.load_from_json(r'G3.json')
        end = time.time()
        print("load: ", end - start)
        start = time.time()
        algo.save_to_json(r'temp_graph')
        end = time.time()
        print("save: ", end - start)
        start = time.time()
        x = algo.is_connected_graph(0)
        end = time.time()
        print("is connected: ", x, end - start)
        start = time.time()
        x = algo.centerPoint()
        end = time.time()
        print("center: ", x, end - start)
        start = time.time()
        x = algo.shortest_path(1, 12)
        end = time.time()
        print("shortestPath: ", x, end - start)
        start = time.time()
        x = algo.TSP([0, 2, 4, 6, 8])
        end = time.time()
        print("TSP: ", x, end - start)
        print()